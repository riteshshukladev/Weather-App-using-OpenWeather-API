body{
    font-family: 'Raleway', sans-serif;
    min-height: 100vh;
    min-width: 100vw;
    background-image: url(./images/rainy.jpg);
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
}
#container
    height: 100vh;
    width: 100vw;
    display: flex;
    justify-content: center;
    align-items: center;

const clickbtn = document.querySelector('.btn').addEventListener('click', loctnid);

async function loctnid() {
  const apikey = "d0fa0e2fa5e7452f908c3a10bc16a9ec";
  let city_name;

  // Adding the feature that if the user selects the given city whose names are provided then search for them.
  document.querySelectorAll('.cities').forEach((city) => {
    city.addEventListener('click', selectionfromgiven);
  });

  city_name = document.querySelector('#input_city').value;
  fetchCityWeather(apikey, city_name);
}

function selectionfromgiven() {
  document.querySelector('#input_city').value = this.innerText;
  const apikey = "d0fa0e2fa5e7452f908c3a10bc16a9ec";
  const city_name = this.innerText;
  fetchCityWeather(apikey, city_name);
}

async function fetchCityWeather(apikey, city_name) {
  fetch(`https://api.opencagedata.com/geocode/v1/json?q=${city_name}&key=${apikey}`)
    .then(response => response.json())
    .then(data => {
      const latitude = data.results[0].geometry.lat;
      const longitude = data.results[0].geometry.lng;
      getweather(latitude, longitude, city_name);
      const city_display = document.querySelector('.city').innerHTML = city_name;
    })
    .catch(error => {
      console.error('Error fetching data:', error);
    });
}

async function getweather(latitude, longitude, city_name) {
  fetch(`https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&hourly=temperature_2m,relativehumidity_2m,rain,snowfall,cloudcover,visibility,windspeed_10m&daily=sunrise,sunset&timezone=auto&forecast_days=1`)
    .then(response => {
      if (response.status === 200) {
        return response.json();
      } else {
        throw new Error("Error returned from server");
      }
    })
    .then(data => {
      console.log(data);
      document.querySelector('.temp').innerHTML = `${data.hourly.temperature_2m[0]}Â°C`;
      document.querySelector('.cloudy-data').innerHTML = `${data.hourly.cloudcover[0]}%`;
      document.querySelector('.humid-data').innerHTML = `${data.hourly.relativehumidity_2m[0]}%`;
      document.querySelector('.wind-data').innerHTML = `${data.hourly.windspeed_10m[0]} km/h`;
      document.querySelector('.rain-data').innerHTML = `${data.hourly.rain[0]} mm`;
      document.querySelector('.visibility-data').innerHTML = `${data.hourly.visibility[0]} m`;
    })
    .catch(err => {
      console.error("Error fetching data", err);
    });
}
